<?php
/**
 * Created by PhpStorm.
 * User: devop
 * Date: 03.02.16
 * Time: 20:57
 */

namespace crelish\components;

use Underscore\Parse;
use Underscore\Types\Arrays;
use yii\base\Component;
use yii\data\ArrayDataProvider;
use yii\helpers\FileHelper;
use yii\widgets\LinkPager;

class CrelisJsonDataProvider extends Component
{

  private $sourceFolder;
  private $allModels;
  private $filter;

  public function __construct($sourceFolder, $settings)
  {

    $this->sourceFolder = $sourceFolder;
    $this->allModels = $this->parseFolderContent($this->sourceFolder);

    if (Arrays::has($settings, 'filter')) {
      $this->filterModels($settings['filter']);
    }

    if (Arrays::has($settings, 'sort')) {
      $this->sortModels($settings['sort']);
    }

    parent::__construct(); // TODO: Change the autogenerated stub
  }

  private function filterModels($filter)
  {

    foreach ($filter as $key => $value) {
      $this->allModels = Arrays::filterBy($this->allModels, $key, $value);
    }
  }

  private function sortModels($sort)
  {
    $this->allModels = Arrays::sort($this->allModels, function($model) use ($sort) {
      return $model[$sort['by']];
    } , $sort['dir']);
  }

  public function parseFolderContent($folder)
  {
    $filesArr = [];
    $allModels = [];

    $fullFolder = \Yii::$app->basePath . DIRECTORY_SEPARATOR . 'workspace' . DIRECTORY_SEPARATOR . 'data' . DIRECTORY_SEPARATOR . $folder;

    $files = FileHelper::findFiles($fullFolder);
    if (isset($files[0])) {
      foreach ($files as $file) {
        $filesArr[] = $file;
      }
    }

    foreach ($filesArr as $file) {
      $content = file_get_contents($file);
      $modelArr = json_decode($content, true);
      $modelArr['id'] = $file;
      $allModels[] = $modelArr;
    }

    return $allModels;
  }

  public function all()
  {
    $provider = new ArrayDataProvider([
      'key' => 'id',
      'allModels' => $this->allModels,
      'pagination' => [
        'totalCount' => count($this->allModels),
        'pageSize' => 15,
        'forcePageParam' => true,
        //'route' => $_GET['pathRequested'],
        //'urlManager' => \Yii::$app->getUrlManager(),
      ],
    ]);

    $models = $provider->getModels();

    $pager = LinkPager::widget([
      'pagination' => $provider->getPagination(),
      'maxButtonCount' => 10
    ]);

    $result = ['models' => array_values($models), 'pager' => $pager];

    return $result;
  }
}
